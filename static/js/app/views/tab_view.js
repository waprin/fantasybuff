// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'underscore', 'backbone'], function($, _, Backbone) {
  var TabView;
  TabView = (function(_super) {
    __extends(TabView, _super);

    function TabView() {
      return TabView.__super__.constructor.apply(this, arguments);
    }

    TabView.prototype['tagName'] = 'ul';

    TabView.prototype['className'] = 'nav nav-tabs';

    TabView.prototype.update = function(name, id) {
      if (name === "getTeam") {
        return;
      }
      return _.each(this.$el.children(), (function(_this) {
        return function(child) {
          var week_id;
          child = $(child);
          if (child.attr('class') === 'dropdown') {
            return;
          }
          if (_this.options.activeMatch(child, name, id)) {
            if (child.hasClass('active')) {
              return;
            }
            $("." + _this.options.prefix + "-tab").hide();
            child.addClass('active');
            if (_this.options.use_id) {
              week_id = "#" + _this.options.prefix + "-" + id + "-tab";
            } else {
              week_id = "#" + _this.options.prefix + "-" + name + "-tab";
            }
            return $(week_id).show();
          } else {
            return child.removeClass('active');
          }
        };
      })(this));
    };

    TabView.prototype.initialize = function(options) {
      this.options = options;
      return Backbone.history.on('route', (function(_this) {
        return function(router, name, id) {
          return _this.update(name, id[0]);
        };
      })(this));
    };

    TabView.prototype.render = function(tabs) {
      var render_tab, tab, _i, _len;
      render_tab = function(tab) {
        return "<li id=\"" + tab.id + "\"><a href=\"#" + tab.href + "\">" + tab.name + "</a></li> ";
      };
      for (_i = 0, _len = tabs.length; _i < _len; _i++) {
        tab = tabs[_i];
        this.$el.append(render_tab(tab));
      }
      $(this.$('li')[0]).addClass('active');
      $("#" + this.$('li')[0]['id'] + "-tab").show();
      return this;
    };

    return TabView;

  })(Backbone.View);
  return {
    TabView: TabView
  };
});
